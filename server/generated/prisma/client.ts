
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Rooms
 * const rooms = await prisma.room.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node")
path.join(process.cwd(), "generated/prisma/query_engine-windows.dll.node")

/**
 * Model Room
 * 
 */
export type Room = Prisma.RoomModel
/**
 * Model Participant
 * 
 */
export type Participant = Prisma.ParticipantModel
/**
 * Model ChatMessage
 * 
 */
export type ChatMessage = Prisma.ChatMessageModel
/**
 * Model ChatMessageHistory
 * 
 */
export type ChatMessageHistory = Prisma.ChatMessageHistoryModel
/**
 * Model MessageReaction
 * 
 */
export type MessageReaction = Prisma.MessageReactionModel
/**
 * Model SystemMessage
 * 
 */
export type SystemMessage = Prisma.SystemMessageModel
/**
 * Model TypingIndicator
 * 
 */
export type TypingIndicator = Prisma.TypingIndicatorModel
/**
 * Model PeerConnectionAnalytics
 * 
 */
export type PeerConnectionAnalytics = Prisma.PeerConnectionAnalyticsModel
/**
 * Model RoomActivity
 * 
 */
export type RoomActivity = Prisma.RoomActivityModel
/**
 * Model ConnectionLog
 * 
 */
export type ConnectionLog = Prisma.ConnectionLogModel
/**
 * Model TurnCredential
 * 
 */
export type TurnCredential = Prisma.TurnCredentialModel
/**
 * Model SystemEvent
 * 
 */
export type SystemEvent = Prisma.SystemEventModel

export type MessageType = $Enums.MessageType
export const MessageType = $Enums.MessageType

export type ModerationStatus = $Enums.ModerationStatus
export const ModerationStatus = $Enums.ModerationStatus

export type MessageActionType = $Enums.MessageActionType
export const MessageActionType = $Enums.MessageActionType

export type ActionByType = $Enums.ActionByType
export const ActionByType = $Enums.ActionByType

export type SystemMessageType = $Enums.SystemMessageType
export const SystemMessageType = $Enums.SystemMessageType

export type PeerConnectionState = $Enums.PeerConnectionState
export const PeerConnectionState = $Enums.PeerConnectionState

export type IceConnectionState = $Enums.IceConnectionState
export const IceConnectionState = $Enums.IceConnectionState
