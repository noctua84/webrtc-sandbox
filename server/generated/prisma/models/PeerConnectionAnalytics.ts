
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `PeerConnectionAnalytics` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model PeerConnectionAnalytics
 * 
 */
export type PeerConnectionAnalyticsModel = runtime.Types.Result.DefaultSelection<Prisma.$PeerConnectionAnalyticsPayload>

export type AggregatePeerConnectionAnalytics = {
  _count: PeerConnectionAnalyticsCountAggregateOutputType | null
  _avg: PeerConnectionAnalyticsAvgAggregateOutputType | null
  _sum: PeerConnectionAnalyticsSumAggregateOutputType | null
  _min: PeerConnectionAnalyticsMinAggregateOutputType | null
  _max: PeerConnectionAnalyticsMaxAggregateOutputType | null
}

export type PeerConnectionAnalyticsAvgAggregateOutputType = {
  candidatesGenerated: number | null
  candidatesReceived: number | null
  connectionDuration: number | null
}

export type PeerConnectionAnalyticsSumAggregateOutputType = {
  candidatesGenerated: number | null
  candidatesReceived: number | null
  connectionDuration: number | null
}

export type PeerConnectionAnalyticsMinAggregateOutputType = {
  id: string | null
  roomId: string | null
  initiatorId: string | null
  targetId: string | null
  connectionState: $Enums.PeerConnectionState | null
  iceConnectionState: $Enums.IceConnectionState | null
  createdAt: Date | null
  establishedAt: Date | null
  failedAt: Date | null
  lastStateChange: Date | null
  candidatesGenerated: number | null
  candidatesReceived: number | null
  connectionDuration: number | null
  failureReason: string | null
  networkType: string | null
}

export type PeerConnectionAnalyticsMaxAggregateOutputType = {
  id: string | null
  roomId: string | null
  initiatorId: string | null
  targetId: string | null
  connectionState: $Enums.PeerConnectionState | null
  iceConnectionState: $Enums.IceConnectionState | null
  createdAt: Date | null
  establishedAt: Date | null
  failedAt: Date | null
  lastStateChange: Date | null
  candidatesGenerated: number | null
  candidatesReceived: number | null
  connectionDuration: number | null
  failureReason: string | null
  networkType: string | null
}

export type PeerConnectionAnalyticsCountAggregateOutputType = {
  id: number
  roomId: number
  initiatorId: number
  targetId: number
  connectionState: number
  iceConnectionState: number
  createdAt: number
  establishedAt: number
  failedAt: number
  lastStateChange: number
  candidatesGenerated: number
  candidatesReceived: number
  connectionDuration: number
  failureReason: number
  networkType: number
  candidateTypesUsed: number
  _all: number
}


export type PeerConnectionAnalyticsAvgAggregateInputType = {
  candidatesGenerated?: true
  candidatesReceived?: true
  connectionDuration?: true
}

export type PeerConnectionAnalyticsSumAggregateInputType = {
  candidatesGenerated?: true
  candidatesReceived?: true
  connectionDuration?: true
}

export type PeerConnectionAnalyticsMinAggregateInputType = {
  id?: true
  roomId?: true
  initiatorId?: true
  targetId?: true
  connectionState?: true
  iceConnectionState?: true
  createdAt?: true
  establishedAt?: true
  failedAt?: true
  lastStateChange?: true
  candidatesGenerated?: true
  candidatesReceived?: true
  connectionDuration?: true
  failureReason?: true
  networkType?: true
}

export type PeerConnectionAnalyticsMaxAggregateInputType = {
  id?: true
  roomId?: true
  initiatorId?: true
  targetId?: true
  connectionState?: true
  iceConnectionState?: true
  createdAt?: true
  establishedAt?: true
  failedAt?: true
  lastStateChange?: true
  candidatesGenerated?: true
  candidatesReceived?: true
  connectionDuration?: true
  failureReason?: true
  networkType?: true
}

export type PeerConnectionAnalyticsCountAggregateInputType = {
  id?: true
  roomId?: true
  initiatorId?: true
  targetId?: true
  connectionState?: true
  iceConnectionState?: true
  createdAt?: true
  establishedAt?: true
  failedAt?: true
  lastStateChange?: true
  candidatesGenerated?: true
  candidatesReceived?: true
  connectionDuration?: true
  failureReason?: true
  networkType?: true
  candidateTypesUsed?: true
  _all?: true
}

export type PeerConnectionAnalyticsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PeerConnectionAnalytics to aggregate.
   */
  where?: Prisma.PeerConnectionAnalyticsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PeerConnectionAnalytics to fetch.
   */
  orderBy?: Prisma.PeerConnectionAnalyticsOrderByWithRelationInput | Prisma.PeerConnectionAnalyticsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PeerConnectionAnalyticsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PeerConnectionAnalytics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PeerConnectionAnalytics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PeerConnectionAnalytics
  **/
  _count?: true | PeerConnectionAnalyticsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PeerConnectionAnalyticsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PeerConnectionAnalyticsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PeerConnectionAnalyticsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PeerConnectionAnalyticsMaxAggregateInputType
}

export type GetPeerConnectionAnalyticsAggregateType<T extends PeerConnectionAnalyticsAggregateArgs> = {
      [P in keyof T & keyof AggregatePeerConnectionAnalytics]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePeerConnectionAnalytics[P]>
    : Prisma.GetScalarType<T[P], AggregatePeerConnectionAnalytics[P]>
}




export type PeerConnectionAnalyticsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PeerConnectionAnalyticsWhereInput
  orderBy?: Prisma.PeerConnectionAnalyticsOrderByWithAggregationInput | Prisma.PeerConnectionAnalyticsOrderByWithAggregationInput[]
  by: Prisma.PeerConnectionAnalyticsScalarFieldEnum[] | Prisma.PeerConnectionAnalyticsScalarFieldEnum
  having?: Prisma.PeerConnectionAnalyticsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PeerConnectionAnalyticsCountAggregateInputType | true
  _avg?: PeerConnectionAnalyticsAvgAggregateInputType
  _sum?: PeerConnectionAnalyticsSumAggregateInputType
  _min?: PeerConnectionAnalyticsMinAggregateInputType
  _max?: PeerConnectionAnalyticsMaxAggregateInputType
}

export type PeerConnectionAnalyticsGroupByOutputType = {
  id: string
  roomId: string
  initiatorId: string
  targetId: string
  connectionState: $Enums.PeerConnectionState
  iceConnectionState: $Enums.IceConnectionState
  createdAt: Date
  establishedAt: Date | null
  failedAt: Date | null
  lastStateChange: Date
  candidatesGenerated: number
  candidatesReceived: number
  connectionDuration: number | null
  failureReason: string | null
  networkType: string | null
  candidateTypesUsed: string[]
  _count: PeerConnectionAnalyticsCountAggregateOutputType | null
  _avg: PeerConnectionAnalyticsAvgAggregateOutputType | null
  _sum: PeerConnectionAnalyticsSumAggregateOutputType | null
  _min: PeerConnectionAnalyticsMinAggregateOutputType | null
  _max: PeerConnectionAnalyticsMaxAggregateOutputType | null
}

type GetPeerConnectionAnalyticsGroupByPayload<T extends PeerConnectionAnalyticsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PeerConnectionAnalyticsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PeerConnectionAnalyticsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PeerConnectionAnalyticsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PeerConnectionAnalyticsGroupByOutputType[P]>
      }
    >
  > 



export type PeerConnectionAnalyticsWhereInput = {
  AND?: Prisma.PeerConnectionAnalyticsWhereInput | Prisma.PeerConnectionAnalyticsWhereInput[]
  OR?: Prisma.PeerConnectionAnalyticsWhereInput[]
  NOT?: Prisma.PeerConnectionAnalyticsWhereInput | Prisma.PeerConnectionAnalyticsWhereInput[]
  id?: Prisma.StringFilter<"PeerConnectionAnalytics"> | string
  roomId?: Prisma.StringFilter<"PeerConnectionAnalytics"> | string
  initiatorId?: Prisma.StringFilter<"PeerConnectionAnalytics"> | string
  targetId?: Prisma.StringFilter<"PeerConnectionAnalytics"> | string
  connectionState?: Prisma.EnumPeerConnectionStateFilter<"PeerConnectionAnalytics"> | $Enums.PeerConnectionState
  iceConnectionState?: Prisma.EnumIceConnectionStateFilter<"PeerConnectionAnalytics"> | $Enums.IceConnectionState
  createdAt?: Prisma.DateTimeFilter<"PeerConnectionAnalytics"> | Date | string
  establishedAt?: Prisma.DateTimeNullableFilter<"PeerConnectionAnalytics"> | Date | string | null
  failedAt?: Prisma.DateTimeNullableFilter<"PeerConnectionAnalytics"> | Date | string | null
  lastStateChange?: Prisma.DateTimeFilter<"PeerConnectionAnalytics"> | Date | string
  candidatesGenerated?: Prisma.IntFilter<"PeerConnectionAnalytics"> | number
  candidatesReceived?: Prisma.IntFilter<"PeerConnectionAnalytics"> | number
  connectionDuration?: Prisma.IntNullableFilter<"PeerConnectionAnalytics"> | number | null
  failureReason?: Prisma.StringNullableFilter<"PeerConnectionAnalytics"> | string | null
  networkType?: Prisma.StringNullableFilter<"PeerConnectionAnalytics"> | string | null
  candidateTypesUsed?: Prisma.StringNullableListFilter<"PeerConnectionAnalytics">
}

export type PeerConnectionAnalyticsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  roomId?: Prisma.SortOrder
  initiatorId?: Prisma.SortOrder
  targetId?: Prisma.SortOrder
  connectionState?: Prisma.SortOrder
  iceConnectionState?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  establishedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  failedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  lastStateChange?: Prisma.SortOrder
  candidatesGenerated?: Prisma.SortOrder
  candidatesReceived?: Prisma.SortOrder
  connectionDuration?: Prisma.SortOrderInput | Prisma.SortOrder
  failureReason?: Prisma.SortOrderInput | Prisma.SortOrder
  networkType?: Prisma.SortOrderInput | Prisma.SortOrder
  candidateTypesUsed?: Prisma.SortOrder
}

export type PeerConnectionAnalyticsWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  roomId_initiatorId_targetId?: Prisma.PeerConnectionAnalyticsRoomIdInitiatorIdTargetIdCompoundUniqueInput
  AND?: Prisma.PeerConnectionAnalyticsWhereInput | Prisma.PeerConnectionAnalyticsWhereInput[]
  OR?: Prisma.PeerConnectionAnalyticsWhereInput[]
  NOT?: Prisma.PeerConnectionAnalyticsWhereInput | Prisma.PeerConnectionAnalyticsWhereInput[]
  roomId?: Prisma.StringFilter<"PeerConnectionAnalytics"> | string
  initiatorId?: Prisma.StringFilter<"PeerConnectionAnalytics"> | string
  targetId?: Prisma.StringFilter<"PeerConnectionAnalytics"> | string
  connectionState?: Prisma.EnumPeerConnectionStateFilter<"PeerConnectionAnalytics"> | $Enums.PeerConnectionState
  iceConnectionState?: Prisma.EnumIceConnectionStateFilter<"PeerConnectionAnalytics"> | $Enums.IceConnectionState
  createdAt?: Prisma.DateTimeFilter<"PeerConnectionAnalytics"> | Date | string
  establishedAt?: Prisma.DateTimeNullableFilter<"PeerConnectionAnalytics"> | Date | string | null
  failedAt?: Prisma.DateTimeNullableFilter<"PeerConnectionAnalytics"> | Date | string | null
  lastStateChange?: Prisma.DateTimeFilter<"PeerConnectionAnalytics"> | Date | string
  candidatesGenerated?: Prisma.IntFilter<"PeerConnectionAnalytics"> | number
  candidatesReceived?: Prisma.IntFilter<"PeerConnectionAnalytics"> | number
  connectionDuration?: Prisma.IntNullableFilter<"PeerConnectionAnalytics"> | number | null
  failureReason?: Prisma.StringNullableFilter<"PeerConnectionAnalytics"> | string | null
  networkType?: Prisma.StringNullableFilter<"PeerConnectionAnalytics"> | string | null
  candidateTypesUsed?: Prisma.StringNullableListFilter<"PeerConnectionAnalytics">
}, "id" | "roomId_initiatorId_targetId">

export type PeerConnectionAnalyticsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  roomId?: Prisma.SortOrder
  initiatorId?: Prisma.SortOrder
  targetId?: Prisma.SortOrder
  connectionState?: Prisma.SortOrder
  iceConnectionState?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  establishedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  failedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  lastStateChange?: Prisma.SortOrder
  candidatesGenerated?: Prisma.SortOrder
  candidatesReceived?: Prisma.SortOrder
  connectionDuration?: Prisma.SortOrderInput | Prisma.SortOrder
  failureReason?: Prisma.SortOrderInput | Prisma.SortOrder
  networkType?: Prisma.SortOrderInput | Prisma.SortOrder
  candidateTypesUsed?: Prisma.SortOrder
  _count?: Prisma.PeerConnectionAnalyticsCountOrderByAggregateInput
  _avg?: Prisma.PeerConnectionAnalyticsAvgOrderByAggregateInput
  _max?: Prisma.PeerConnectionAnalyticsMaxOrderByAggregateInput
  _min?: Prisma.PeerConnectionAnalyticsMinOrderByAggregateInput
  _sum?: Prisma.PeerConnectionAnalyticsSumOrderByAggregateInput
}

export type PeerConnectionAnalyticsScalarWhereWithAggregatesInput = {
  AND?: Prisma.PeerConnectionAnalyticsScalarWhereWithAggregatesInput | Prisma.PeerConnectionAnalyticsScalarWhereWithAggregatesInput[]
  OR?: Prisma.PeerConnectionAnalyticsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PeerConnectionAnalyticsScalarWhereWithAggregatesInput | Prisma.PeerConnectionAnalyticsScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"PeerConnectionAnalytics"> | string
  roomId?: Prisma.StringWithAggregatesFilter<"PeerConnectionAnalytics"> | string
  initiatorId?: Prisma.StringWithAggregatesFilter<"PeerConnectionAnalytics"> | string
  targetId?: Prisma.StringWithAggregatesFilter<"PeerConnectionAnalytics"> | string
  connectionState?: Prisma.EnumPeerConnectionStateWithAggregatesFilter<"PeerConnectionAnalytics"> | $Enums.PeerConnectionState
  iceConnectionState?: Prisma.EnumIceConnectionStateWithAggregatesFilter<"PeerConnectionAnalytics"> | $Enums.IceConnectionState
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"PeerConnectionAnalytics"> | Date | string
  establishedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"PeerConnectionAnalytics"> | Date | string | null
  failedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"PeerConnectionAnalytics"> | Date | string | null
  lastStateChange?: Prisma.DateTimeWithAggregatesFilter<"PeerConnectionAnalytics"> | Date | string
  candidatesGenerated?: Prisma.IntWithAggregatesFilter<"PeerConnectionAnalytics"> | number
  candidatesReceived?: Prisma.IntWithAggregatesFilter<"PeerConnectionAnalytics"> | number
  connectionDuration?: Prisma.IntNullableWithAggregatesFilter<"PeerConnectionAnalytics"> | number | null
  failureReason?: Prisma.StringNullableWithAggregatesFilter<"PeerConnectionAnalytics"> | string | null
  networkType?: Prisma.StringNullableWithAggregatesFilter<"PeerConnectionAnalytics"> | string | null
  candidateTypesUsed?: Prisma.StringNullableListFilter<"PeerConnectionAnalytics">
}

export type PeerConnectionAnalyticsCreateInput = {
  id?: string
  roomId: string
  initiatorId: string
  targetId: string
  connectionState?: $Enums.PeerConnectionState
  iceConnectionState?: $Enums.IceConnectionState
  createdAt?: Date | string
  establishedAt?: Date | string | null
  failedAt?: Date | string | null
  lastStateChange?: Date | string
  candidatesGenerated?: number
  candidatesReceived?: number
  connectionDuration?: number | null
  failureReason?: string | null
  networkType?: string | null
  candidateTypesUsed?: Prisma.PeerConnectionAnalyticsCreatecandidateTypesUsedInput | string[]
}

export type PeerConnectionAnalyticsUncheckedCreateInput = {
  id?: string
  roomId: string
  initiatorId: string
  targetId: string
  connectionState?: $Enums.PeerConnectionState
  iceConnectionState?: $Enums.IceConnectionState
  createdAt?: Date | string
  establishedAt?: Date | string | null
  failedAt?: Date | string | null
  lastStateChange?: Date | string
  candidatesGenerated?: number
  candidatesReceived?: number
  connectionDuration?: number | null
  failureReason?: string | null
  networkType?: string | null
  candidateTypesUsed?: Prisma.PeerConnectionAnalyticsCreatecandidateTypesUsedInput | string[]
}

export type PeerConnectionAnalyticsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  roomId?: Prisma.StringFieldUpdateOperationsInput | string
  initiatorId?: Prisma.StringFieldUpdateOperationsInput | string
  targetId?: Prisma.StringFieldUpdateOperationsInput | string
  connectionState?: Prisma.EnumPeerConnectionStateFieldUpdateOperationsInput | $Enums.PeerConnectionState
  iceConnectionState?: Prisma.EnumIceConnectionStateFieldUpdateOperationsInput | $Enums.IceConnectionState
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  establishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  failedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastStateChange?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  candidatesGenerated?: Prisma.IntFieldUpdateOperationsInput | number
  candidatesReceived?: Prisma.IntFieldUpdateOperationsInput | number
  connectionDuration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  failureReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  networkType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  candidateTypesUsed?: Prisma.PeerConnectionAnalyticsUpdatecandidateTypesUsedInput | string[]
}

export type PeerConnectionAnalyticsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  roomId?: Prisma.StringFieldUpdateOperationsInput | string
  initiatorId?: Prisma.StringFieldUpdateOperationsInput | string
  targetId?: Prisma.StringFieldUpdateOperationsInput | string
  connectionState?: Prisma.EnumPeerConnectionStateFieldUpdateOperationsInput | $Enums.PeerConnectionState
  iceConnectionState?: Prisma.EnumIceConnectionStateFieldUpdateOperationsInput | $Enums.IceConnectionState
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  establishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  failedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastStateChange?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  candidatesGenerated?: Prisma.IntFieldUpdateOperationsInput | number
  candidatesReceived?: Prisma.IntFieldUpdateOperationsInput | number
  connectionDuration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  failureReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  networkType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  candidateTypesUsed?: Prisma.PeerConnectionAnalyticsUpdatecandidateTypesUsedInput | string[]
}

export type PeerConnectionAnalyticsCreateManyInput = {
  id?: string
  roomId: string
  initiatorId: string
  targetId: string
  connectionState?: $Enums.PeerConnectionState
  iceConnectionState?: $Enums.IceConnectionState
  createdAt?: Date | string
  establishedAt?: Date | string | null
  failedAt?: Date | string | null
  lastStateChange?: Date | string
  candidatesGenerated?: number
  candidatesReceived?: number
  connectionDuration?: number | null
  failureReason?: string | null
  networkType?: string | null
  candidateTypesUsed?: Prisma.PeerConnectionAnalyticsCreatecandidateTypesUsedInput | string[]
}

export type PeerConnectionAnalyticsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  roomId?: Prisma.StringFieldUpdateOperationsInput | string
  initiatorId?: Prisma.StringFieldUpdateOperationsInput | string
  targetId?: Prisma.StringFieldUpdateOperationsInput | string
  connectionState?: Prisma.EnumPeerConnectionStateFieldUpdateOperationsInput | $Enums.PeerConnectionState
  iceConnectionState?: Prisma.EnumIceConnectionStateFieldUpdateOperationsInput | $Enums.IceConnectionState
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  establishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  failedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastStateChange?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  candidatesGenerated?: Prisma.IntFieldUpdateOperationsInput | number
  candidatesReceived?: Prisma.IntFieldUpdateOperationsInput | number
  connectionDuration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  failureReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  networkType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  candidateTypesUsed?: Prisma.PeerConnectionAnalyticsUpdatecandidateTypesUsedInput | string[]
}

export type PeerConnectionAnalyticsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  roomId?: Prisma.StringFieldUpdateOperationsInput | string
  initiatorId?: Prisma.StringFieldUpdateOperationsInput | string
  targetId?: Prisma.StringFieldUpdateOperationsInput | string
  connectionState?: Prisma.EnumPeerConnectionStateFieldUpdateOperationsInput | $Enums.PeerConnectionState
  iceConnectionState?: Prisma.EnumIceConnectionStateFieldUpdateOperationsInput | $Enums.IceConnectionState
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  establishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  failedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastStateChange?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  candidatesGenerated?: Prisma.IntFieldUpdateOperationsInput | number
  candidatesReceived?: Prisma.IntFieldUpdateOperationsInput | number
  connectionDuration?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  failureReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  networkType?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  candidateTypesUsed?: Prisma.PeerConnectionAnalyticsUpdatecandidateTypesUsedInput | string[]
}

export type PeerConnectionAnalyticsRoomIdInitiatorIdTargetIdCompoundUniqueInput = {
  roomId: string
  initiatorId: string
  targetId: string
}

export type PeerConnectionAnalyticsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roomId?: Prisma.SortOrder
  initiatorId?: Prisma.SortOrder
  targetId?: Prisma.SortOrder
  connectionState?: Prisma.SortOrder
  iceConnectionState?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  establishedAt?: Prisma.SortOrder
  failedAt?: Prisma.SortOrder
  lastStateChange?: Prisma.SortOrder
  candidatesGenerated?: Prisma.SortOrder
  candidatesReceived?: Prisma.SortOrder
  connectionDuration?: Prisma.SortOrder
  failureReason?: Prisma.SortOrder
  networkType?: Prisma.SortOrder
  candidateTypesUsed?: Prisma.SortOrder
}

export type PeerConnectionAnalyticsAvgOrderByAggregateInput = {
  candidatesGenerated?: Prisma.SortOrder
  candidatesReceived?: Prisma.SortOrder
  connectionDuration?: Prisma.SortOrder
}

export type PeerConnectionAnalyticsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roomId?: Prisma.SortOrder
  initiatorId?: Prisma.SortOrder
  targetId?: Prisma.SortOrder
  connectionState?: Prisma.SortOrder
  iceConnectionState?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  establishedAt?: Prisma.SortOrder
  failedAt?: Prisma.SortOrder
  lastStateChange?: Prisma.SortOrder
  candidatesGenerated?: Prisma.SortOrder
  candidatesReceived?: Prisma.SortOrder
  connectionDuration?: Prisma.SortOrder
  failureReason?: Prisma.SortOrder
  networkType?: Prisma.SortOrder
}

export type PeerConnectionAnalyticsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roomId?: Prisma.SortOrder
  initiatorId?: Prisma.SortOrder
  targetId?: Prisma.SortOrder
  connectionState?: Prisma.SortOrder
  iceConnectionState?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  establishedAt?: Prisma.SortOrder
  failedAt?: Prisma.SortOrder
  lastStateChange?: Prisma.SortOrder
  candidatesGenerated?: Prisma.SortOrder
  candidatesReceived?: Prisma.SortOrder
  connectionDuration?: Prisma.SortOrder
  failureReason?: Prisma.SortOrder
  networkType?: Prisma.SortOrder
}

export type PeerConnectionAnalyticsSumOrderByAggregateInput = {
  candidatesGenerated?: Prisma.SortOrder
  candidatesReceived?: Prisma.SortOrder
  connectionDuration?: Prisma.SortOrder
}

export type PeerConnectionAnalyticsCreatecandidateTypesUsedInput = {
  set: string[]
}

export type EnumPeerConnectionStateFieldUpdateOperationsInput = {
  set?: $Enums.PeerConnectionState
}

export type EnumIceConnectionStateFieldUpdateOperationsInput = {
  set?: $Enums.IceConnectionState
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type PeerConnectionAnalyticsUpdatecandidateTypesUsedInput = {
  set?: string[]
  push?: string | string[]
}



export type PeerConnectionAnalyticsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  roomId?: boolean
  initiatorId?: boolean
  targetId?: boolean
  connectionState?: boolean
  iceConnectionState?: boolean
  createdAt?: boolean
  establishedAt?: boolean
  failedAt?: boolean
  lastStateChange?: boolean
  candidatesGenerated?: boolean
  candidatesReceived?: boolean
  connectionDuration?: boolean
  failureReason?: boolean
  networkType?: boolean
  candidateTypesUsed?: boolean
}, ExtArgs["result"]["peerConnectionAnalytics"]>

export type PeerConnectionAnalyticsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  roomId?: boolean
  initiatorId?: boolean
  targetId?: boolean
  connectionState?: boolean
  iceConnectionState?: boolean
  createdAt?: boolean
  establishedAt?: boolean
  failedAt?: boolean
  lastStateChange?: boolean
  candidatesGenerated?: boolean
  candidatesReceived?: boolean
  connectionDuration?: boolean
  failureReason?: boolean
  networkType?: boolean
  candidateTypesUsed?: boolean
}, ExtArgs["result"]["peerConnectionAnalytics"]>

export type PeerConnectionAnalyticsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  roomId?: boolean
  initiatorId?: boolean
  targetId?: boolean
  connectionState?: boolean
  iceConnectionState?: boolean
  createdAt?: boolean
  establishedAt?: boolean
  failedAt?: boolean
  lastStateChange?: boolean
  candidatesGenerated?: boolean
  candidatesReceived?: boolean
  connectionDuration?: boolean
  failureReason?: boolean
  networkType?: boolean
  candidateTypesUsed?: boolean
}, ExtArgs["result"]["peerConnectionAnalytics"]>

export type PeerConnectionAnalyticsSelectScalar = {
  id?: boolean
  roomId?: boolean
  initiatorId?: boolean
  targetId?: boolean
  connectionState?: boolean
  iceConnectionState?: boolean
  createdAt?: boolean
  establishedAt?: boolean
  failedAt?: boolean
  lastStateChange?: boolean
  candidatesGenerated?: boolean
  candidatesReceived?: boolean
  connectionDuration?: boolean
  failureReason?: boolean
  networkType?: boolean
  candidateTypesUsed?: boolean
}

export type PeerConnectionAnalyticsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "roomId" | "initiatorId" | "targetId" | "connectionState" | "iceConnectionState" | "createdAt" | "establishedAt" | "failedAt" | "lastStateChange" | "candidatesGenerated" | "candidatesReceived" | "connectionDuration" | "failureReason" | "networkType" | "candidateTypesUsed", ExtArgs["result"]["peerConnectionAnalytics"]>

export type $PeerConnectionAnalyticsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PeerConnectionAnalytics"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    roomId: string
    initiatorId: string
    targetId: string
    connectionState: $Enums.PeerConnectionState
    iceConnectionState: $Enums.IceConnectionState
    createdAt: Date
    establishedAt: Date | null
    failedAt: Date | null
    lastStateChange: Date
    candidatesGenerated: number
    candidatesReceived: number
    connectionDuration: number | null
    failureReason: string | null
    networkType: string | null
    candidateTypesUsed: string[]
  }, ExtArgs["result"]["peerConnectionAnalytics"]>
  composites: {}
}

export type PeerConnectionAnalyticsGetPayload<S extends boolean | null | undefined | PeerConnectionAnalyticsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload, S>

export type PeerConnectionAnalyticsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PeerConnectionAnalyticsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PeerConnectionAnalyticsCountAggregateInputType | true
  }

export interface PeerConnectionAnalyticsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PeerConnectionAnalytics'], meta: { name: 'PeerConnectionAnalytics' } }
  /**
   * Find zero or one PeerConnectionAnalytics that matches the filter.
   * @param {PeerConnectionAnalyticsFindUniqueArgs} args - Arguments to find a PeerConnectionAnalytics
   * @example
   * // Get one PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PeerConnectionAnalyticsFindUniqueArgs>(args: Prisma.SelectSubset<T, PeerConnectionAnalyticsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PeerConnectionAnalyticsClient<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PeerConnectionAnalytics that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PeerConnectionAnalyticsFindUniqueOrThrowArgs} args - Arguments to find a PeerConnectionAnalytics
   * @example
   * // Get one PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PeerConnectionAnalyticsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PeerConnectionAnalyticsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PeerConnectionAnalyticsClient<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PeerConnectionAnalytics that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeerConnectionAnalyticsFindFirstArgs} args - Arguments to find a PeerConnectionAnalytics
   * @example
   * // Get one PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PeerConnectionAnalyticsFindFirstArgs>(args?: Prisma.SelectSubset<T, PeerConnectionAnalyticsFindFirstArgs<ExtArgs>>): Prisma.Prisma__PeerConnectionAnalyticsClient<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PeerConnectionAnalytics that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeerConnectionAnalyticsFindFirstOrThrowArgs} args - Arguments to find a PeerConnectionAnalytics
   * @example
   * // Get one PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PeerConnectionAnalyticsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PeerConnectionAnalyticsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PeerConnectionAnalyticsClient<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PeerConnectionAnalytics that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeerConnectionAnalyticsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.findMany()
   * 
   * // Get first 10 PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const peerConnectionAnalyticsWithIdOnly = await prisma.peerConnectionAnalytics.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PeerConnectionAnalyticsFindManyArgs>(args?: Prisma.SelectSubset<T, PeerConnectionAnalyticsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PeerConnectionAnalytics.
   * @param {PeerConnectionAnalyticsCreateArgs} args - Arguments to create a PeerConnectionAnalytics.
   * @example
   * // Create one PeerConnectionAnalytics
   * const PeerConnectionAnalytics = await prisma.peerConnectionAnalytics.create({
   *   data: {
   *     // ... data to create a PeerConnectionAnalytics
   *   }
   * })
   * 
   */
  create<T extends PeerConnectionAnalyticsCreateArgs>(args: Prisma.SelectSubset<T, PeerConnectionAnalyticsCreateArgs<ExtArgs>>): Prisma.Prisma__PeerConnectionAnalyticsClient<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PeerConnectionAnalytics.
   * @param {PeerConnectionAnalyticsCreateManyArgs} args - Arguments to create many PeerConnectionAnalytics.
   * @example
   * // Create many PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PeerConnectionAnalyticsCreateManyArgs>(args?: Prisma.SelectSubset<T, PeerConnectionAnalyticsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PeerConnectionAnalytics and returns the data saved in the database.
   * @param {PeerConnectionAnalyticsCreateManyAndReturnArgs} args - Arguments to create many PeerConnectionAnalytics.
   * @example
   * // Create many PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PeerConnectionAnalytics and only return the `id`
   * const peerConnectionAnalyticsWithIdOnly = await prisma.peerConnectionAnalytics.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PeerConnectionAnalyticsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PeerConnectionAnalyticsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PeerConnectionAnalytics.
   * @param {PeerConnectionAnalyticsDeleteArgs} args - Arguments to delete one PeerConnectionAnalytics.
   * @example
   * // Delete one PeerConnectionAnalytics
   * const PeerConnectionAnalytics = await prisma.peerConnectionAnalytics.delete({
   *   where: {
   *     // ... filter to delete one PeerConnectionAnalytics
   *   }
   * })
   * 
   */
  delete<T extends PeerConnectionAnalyticsDeleteArgs>(args: Prisma.SelectSubset<T, PeerConnectionAnalyticsDeleteArgs<ExtArgs>>): Prisma.Prisma__PeerConnectionAnalyticsClient<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PeerConnectionAnalytics.
   * @param {PeerConnectionAnalyticsUpdateArgs} args - Arguments to update one PeerConnectionAnalytics.
   * @example
   * // Update one PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PeerConnectionAnalyticsUpdateArgs>(args: Prisma.SelectSubset<T, PeerConnectionAnalyticsUpdateArgs<ExtArgs>>): Prisma.Prisma__PeerConnectionAnalyticsClient<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PeerConnectionAnalytics.
   * @param {PeerConnectionAnalyticsDeleteManyArgs} args - Arguments to filter PeerConnectionAnalytics to delete.
   * @example
   * // Delete a few PeerConnectionAnalytics
   * const { count } = await prisma.peerConnectionAnalytics.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PeerConnectionAnalyticsDeleteManyArgs>(args?: Prisma.SelectSubset<T, PeerConnectionAnalyticsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PeerConnectionAnalytics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeerConnectionAnalyticsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PeerConnectionAnalyticsUpdateManyArgs>(args: Prisma.SelectSubset<T, PeerConnectionAnalyticsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PeerConnectionAnalytics and returns the data updated in the database.
   * @param {PeerConnectionAnalyticsUpdateManyAndReturnArgs} args - Arguments to update many PeerConnectionAnalytics.
   * @example
   * // Update many PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PeerConnectionAnalytics and only return the `id`
   * const peerConnectionAnalyticsWithIdOnly = await prisma.peerConnectionAnalytics.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PeerConnectionAnalyticsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PeerConnectionAnalyticsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PeerConnectionAnalytics.
   * @param {PeerConnectionAnalyticsUpsertArgs} args - Arguments to update or create a PeerConnectionAnalytics.
   * @example
   * // Update or create a PeerConnectionAnalytics
   * const peerConnectionAnalytics = await prisma.peerConnectionAnalytics.upsert({
   *   create: {
   *     // ... data to create a PeerConnectionAnalytics
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PeerConnectionAnalytics we want to update
   *   }
   * })
   */
  upsert<T extends PeerConnectionAnalyticsUpsertArgs>(args: Prisma.SelectSubset<T, PeerConnectionAnalyticsUpsertArgs<ExtArgs>>): Prisma.Prisma__PeerConnectionAnalyticsClient<runtime.Types.Result.GetResult<Prisma.$PeerConnectionAnalyticsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PeerConnectionAnalytics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeerConnectionAnalyticsCountArgs} args - Arguments to filter PeerConnectionAnalytics to count.
   * @example
   * // Count the number of PeerConnectionAnalytics
   * const count = await prisma.peerConnectionAnalytics.count({
   *   where: {
   *     // ... the filter for the PeerConnectionAnalytics we want to count
   *   }
   * })
  **/
  count<T extends PeerConnectionAnalyticsCountArgs>(
    args?: Prisma.Subset<T, PeerConnectionAnalyticsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PeerConnectionAnalyticsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PeerConnectionAnalytics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeerConnectionAnalyticsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PeerConnectionAnalyticsAggregateArgs>(args: Prisma.Subset<T, PeerConnectionAnalyticsAggregateArgs>): Prisma.PrismaPromise<GetPeerConnectionAnalyticsAggregateType<T>>

  /**
   * Group by PeerConnectionAnalytics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeerConnectionAnalyticsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PeerConnectionAnalyticsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PeerConnectionAnalyticsGroupByArgs['orderBy'] }
      : { orderBy?: PeerConnectionAnalyticsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PeerConnectionAnalyticsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPeerConnectionAnalyticsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PeerConnectionAnalytics model
 */
readonly fields: PeerConnectionAnalyticsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PeerConnectionAnalytics.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PeerConnectionAnalyticsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PeerConnectionAnalytics model
 */
export interface PeerConnectionAnalyticsFieldRefs {
  readonly id: Prisma.FieldRef<"PeerConnectionAnalytics", 'String'>
  readonly roomId: Prisma.FieldRef<"PeerConnectionAnalytics", 'String'>
  readonly initiatorId: Prisma.FieldRef<"PeerConnectionAnalytics", 'String'>
  readonly targetId: Prisma.FieldRef<"PeerConnectionAnalytics", 'String'>
  readonly connectionState: Prisma.FieldRef<"PeerConnectionAnalytics", 'PeerConnectionState'>
  readonly iceConnectionState: Prisma.FieldRef<"PeerConnectionAnalytics", 'IceConnectionState'>
  readonly createdAt: Prisma.FieldRef<"PeerConnectionAnalytics", 'DateTime'>
  readonly establishedAt: Prisma.FieldRef<"PeerConnectionAnalytics", 'DateTime'>
  readonly failedAt: Prisma.FieldRef<"PeerConnectionAnalytics", 'DateTime'>
  readonly lastStateChange: Prisma.FieldRef<"PeerConnectionAnalytics", 'DateTime'>
  readonly candidatesGenerated: Prisma.FieldRef<"PeerConnectionAnalytics", 'Int'>
  readonly candidatesReceived: Prisma.FieldRef<"PeerConnectionAnalytics", 'Int'>
  readonly connectionDuration: Prisma.FieldRef<"PeerConnectionAnalytics", 'Int'>
  readonly failureReason: Prisma.FieldRef<"PeerConnectionAnalytics", 'String'>
  readonly networkType: Prisma.FieldRef<"PeerConnectionAnalytics", 'String'>
  readonly candidateTypesUsed: Prisma.FieldRef<"PeerConnectionAnalytics", 'String[]'>
}
    

// Custom InputTypes
/**
 * PeerConnectionAnalytics findUnique
 */
export type PeerConnectionAnalyticsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * Filter, which PeerConnectionAnalytics to fetch.
   */
  where: Prisma.PeerConnectionAnalyticsWhereUniqueInput
}

/**
 * PeerConnectionAnalytics findUniqueOrThrow
 */
export type PeerConnectionAnalyticsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * Filter, which PeerConnectionAnalytics to fetch.
   */
  where: Prisma.PeerConnectionAnalyticsWhereUniqueInput
}

/**
 * PeerConnectionAnalytics findFirst
 */
export type PeerConnectionAnalyticsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * Filter, which PeerConnectionAnalytics to fetch.
   */
  where?: Prisma.PeerConnectionAnalyticsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PeerConnectionAnalytics to fetch.
   */
  orderBy?: Prisma.PeerConnectionAnalyticsOrderByWithRelationInput | Prisma.PeerConnectionAnalyticsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PeerConnectionAnalytics.
   */
  cursor?: Prisma.PeerConnectionAnalyticsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PeerConnectionAnalytics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PeerConnectionAnalytics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PeerConnectionAnalytics.
   */
  distinct?: Prisma.PeerConnectionAnalyticsScalarFieldEnum | Prisma.PeerConnectionAnalyticsScalarFieldEnum[]
}

/**
 * PeerConnectionAnalytics findFirstOrThrow
 */
export type PeerConnectionAnalyticsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * Filter, which PeerConnectionAnalytics to fetch.
   */
  where?: Prisma.PeerConnectionAnalyticsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PeerConnectionAnalytics to fetch.
   */
  orderBy?: Prisma.PeerConnectionAnalyticsOrderByWithRelationInput | Prisma.PeerConnectionAnalyticsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PeerConnectionAnalytics.
   */
  cursor?: Prisma.PeerConnectionAnalyticsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PeerConnectionAnalytics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PeerConnectionAnalytics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PeerConnectionAnalytics.
   */
  distinct?: Prisma.PeerConnectionAnalyticsScalarFieldEnum | Prisma.PeerConnectionAnalyticsScalarFieldEnum[]
}

/**
 * PeerConnectionAnalytics findMany
 */
export type PeerConnectionAnalyticsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * Filter, which PeerConnectionAnalytics to fetch.
   */
  where?: Prisma.PeerConnectionAnalyticsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PeerConnectionAnalytics to fetch.
   */
  orderBy?: Prisma.PeerConnectionAnalyticsOrderByWithRelationInput | Prisma.PeerConnectionAnalyticsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PeerConnectionAnalytics.
   */
  cursor?: Prisma.PeerConnectionAnalyticsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PeerConnectionAnalytics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PeerConnectionAnalytics.
   */
  skip?: number
  distinct?: Prisma.PeerConnectionAnalyticsScalarFieldEnum | Prisma.PeerConnectionAnalyticsScalarFieldEnum[]
}

/**
 * PeerConnectionAnalytics create
 */
export type PeerConnectionAnalyticsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * The data needed to create a PeerConnectionAnalytics.
   */
  data: Prisma.XOR<Prisma.PeerConnectionAnalyticsCreateInput, Prisma.PeerConnectionAnalyticsUncheckedCreateInput>
}

/**
 * PeerConnectionAnalytics createMany
 */
export type PeerConnectionAnalyticsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PeerConnectionAnalytics.
   */
  data: Prisma.PeerConnectionAnalyticsCreateManyInput | Prisma.PeerConnectionAnalyticsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PeerConnectionAnalytics createManyAndReturn
 */
export type PeerConnectionAnalyticsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * The data used to create many PeerConnectionAnalytics.
   */
  data: Prisma.PeerConnectionAnalyticsCreateManyInput | Prisma.PeerConnectionAnalyticsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PeerConnectionAnalytics update
 */
export type PeerConnectionAnalyticsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * The data needed to update a PeerConnectionAnalytics.
   */
  data: Prisma.XOR<Prisma.PeerConnectionAnalyticsUpdateInput, Prisma.PeerConnectionAnalyticsUncheckedUpdateInput>
  /**
   * Choose, which PeerConnectionAnalytics to update.
   */
  where: Prisma.PeerConnectionAnalyticsWhereUniqueInput
}

/**
 * PeerConnectionAnalytics updateMany
 */
export type PeerConnectionAnalyticsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PeerConnectionAnalytics.
   */
  data: Prisma.XOR<Prisma.PeerConnectionAnalyticsUpdateManyMutationInput, Prisma.PeerConnectionAnalyticsUncheckedUpdateManyInput>
  /**
   * Filter which PeerConnectionAnalytics to update
   */
  where?: Prisma.PeerConnectionAnalyticsWhereInput
  /**
   * Limit how many PeerConnectionAnalytics to update.
   */
  limit?: number
}

/**
 * PeerConnectionAnalytics updateManyAndReturn
 */
export type PeerConnectionAnalyticsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * The data used to update PeerConnectionAnalytics.
   */
  data: Prisma.XOR<Prisma.PeerConnectionAnalyticsUpdateManyMutationInput, Prisma.PeerConnectionAnalyticsUncheckedUpdateManyInput>
  /**
   * Filter which PeerConnectionAnalytics to update
   */
  where?: Prisma.PeerConnectionAnalyticsWhereInput
  /**
   * Limit how many PeerConnectionAnalytics to update.
   */
  limit?: number
}

/**
 * PeerConnectionAnalytics upsert
 */
export type PeerConnectionAnalyticsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * The filter to search for the PeerConnectionAnalytics to update in case it exists.
   */
  where: Prisma.PeerConnectionAnalyticsWhereUniqueInput
  /**
   * In case the PeerConnectionAnalytics found by the `where` argument doesn't exist, create a new PeerConnectionAnalytics with this data.
   */
  create: Prisma.XOR<Prisma.PeerConnectionAnalyticsCreateInput, Prisma.PeerConnectionAnalyticsUncheckedCreateInput>
  /**
   * In case the PeerConnectionAnalytics was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PeerConnectionAnalyticsUpdateInput, Prisma.PeerConnectionAnalyticsUncheckedUpdateInput>
}

/**
 * PeerConnectionAnalytics delete
 */
export type PeerConnectionAnalyticsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
  /**
   * Filter which PeerConnectionAnalytics to delete.
   */
  where: Prisma.PeerConnectionAnalyticsWhereUniqueInput
}

/**
 * PeerConnectionAnalytics deleteMany
 */
export type PeerConnectionAnalyticsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PeerConnectionAnalytics to delete
   */
  where?: Prisma.PeerConnectionAnalyticsWhereInput
  /**
   * Limit how many PeerConnectionAnalytics to delete.
   */
  limit?: number
}

/**
 * PeerConnectionAnalytics without action
 */
export type PeerConnectionAnalyticsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeerConnectionAnalytics
   */
  select?: Prisma.PeerConnectionAnalyticsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeerConnectionAnalytics
   */
  omit?: Prisma.PeerConnectionAnalyticsOmit<ExtArgs> | null
}
